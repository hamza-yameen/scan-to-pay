datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int                         @id @default(autoincrement())
  email              String                      @unique
  name               String                      @unique
  password           String
  
  createdAt          DateTime                    @default(now())
  updatedAt          DateTime                    @updatedAt

  bookings           Booking[]
  reviews            Review[]
}

model Merchant {
  id                  Int                       @id @default(autoincrement())
  name                String                    @unique
  email               String                    @unique
  qrCode              String?
  
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
  
  bookings            Booking[]
  reviews             Review[]
}

model Booking {
  id                  Int                       @id @default(autoincrement())
  user                User                      @relation(fields: [userId], references: [id])
  userId              Int
  merchant            Merchant                  @relation(fields: [merchantId], references: [id])
  merchantId          Int
  status              BookingStatus             @default(PENDING)
  amount              Decimal                   @db.Decimal(10, 2)
  
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
  
  payment             Payment?
  review              Review?
}

model Review {
  id                  Int                       @id @default(autoincrement())
  booking             Booking                   @relation(fields: [bookingId], references: [id])
  bookingId           Int                       @unique
  user                User                      @relation(fields: [userId], references: [id])
  userId              Int
  merchant            Merchant                  @relation(fields: [merchantId], references: [id])
  merchantId          Int
  rating              Int
  comment             String
  
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
}

model Payment {
  id                  Int                       @id @default(autoincrement())
  booking             Booking                   @relation(fields: [bookingId], references: [id])
  bookingId           Int                       @unique
  amount              Decimal                   @db.Decimal(10, 2)
  paymentMethod       PaymentMethod
  status              PaymentStatus             @default(PENDING)
  
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
}



enum BookingStatus {
  PENDING
  COMPLETED
  PAID
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  CRYPTO
  SN_BALANCE
  GBP_WALLET
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}